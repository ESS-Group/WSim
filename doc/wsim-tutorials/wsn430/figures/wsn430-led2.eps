%!PS-Adobe-2.0 EPSF-2.0
%%Title: wsim.gp.led2.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Tue Oct 30 14:27:59 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/Helvetica reencodeISO def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
714 420 M
6248 0 V
1.000 UL
LTb
714 420 M
63 0 V
6185 0 R
-63 0 V
630 420 M
gsave 0 setgray
( 0) Rshow
grestore
1.000 UL
LTb
1.000 UL
LTa
714 1201 M
6248 0 V
1.000 UL
LTb
714 1201 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
gsave 0 setgray
( 0.5) Rshow
grestore
1.000 UL
LTb
1.000 UL
LTa
714 1982 M
6248 0 V
1.000 UL
LTb
714 1982 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
gsave 0 setgray
( 1) Rshow
grestore
1.000 UL
LTb
1.000 UL
LTa
714 2763 M
6248 0 V
1.000 UL
LTb
714 2763 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
gsave 0 setgray
( 1.5) Rshow
grestore
1.000 UL
LTb
1.000 UL
LTa
714 3544 M
6248 0 V
1.000 UL
LTb
714 3544 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
gsave 0 setgray
( 2) Rshow
grestore
1.000 UL
LTb
1.000 UL
LTa
714 420 M
0 3124 V
1.000 UL
LTb
714 420 M
0 63 V
0 3061 R
0 -63 V
714 280 M
gsave 0 setgray
( 0) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTa
1964 420 M
0 3124 V
1.000 UL
LTb
1964 420 M
0 63 V
0 3061 R
0 -63 V
0 -3201 R
gsave 0 setgray
( 20000) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTa
3213 420 M
0 3124 V
1.000 UL
LTb
3213 420 M
0 63 V
0 3061 R
0 -63 V
0 -3201 R
gsave 0 setgray
( 40000) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTa
4463 420 M
0 3124 V
1.000 UL
LTb
4463 420 M
0 63 V
0 3061 R
0 -63 V
0 -3201 R
gsave 0 setgray
( 60000) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTa
5712 420 M
0 3124 V
1.000 UL
LTb
5712 420 M
0 63 V
0 3061 R
0 -63 V
0 -3201 R
gsave 0 setgray
( 80000) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTa
6962 420 M
0 3124 V
1.000 UL
LTb
6962 420 M
0 63 V
0 3061 R
0 -63 V
0 -3201 R
gsave 0 setgray
( 100000) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
714 420 M
6248 0 V
0 3124 V
-6248 0 V
714 420 L
LTb
140 1982 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(led2) Cshow
grestore
grestore
LTb
3838 70 M
gsave 0 setgray
(time \(ms\)) Cshow
grestore
1.000 UP
0.000 UP
5.000 UL
LT0
714 420 M
714 420 Pnt
714 420 Pnt
0.000 UP
5.000 UL
LT0
714 1982 M
435 0 V
714 1982 Pnt
1149 1982 Pnt
0.000 UP
5.000 UL
LT0
1149 420 M
109 0 V
1149 420 Pnt
1258 420 Pnt
0.000 UP
5.000 UL
LT0
1258 1982 M
109 0 V
1258 1982 Pnt
1367 1982 Pnt
0.000 UP
5.000 UL
LT0
1367 420 M
109 0 V
1367 420 Pnt
1476 420 Pnt
0.000 UP
5.000 UL
LT0
1476 1982 M
109 0 V
1476 1982 Pnt
1585 1982 Pnt
0.000 UP
5.000 UL
LT0
1585 420 M
109 0 V
1585 420 Pnt
1694 420 Pnt
0.000 UP
5.000 UL
LT0
1694 1982 M
109 0 V
1694 1982 Pnt
1803 1982 Pnt
0.000 UP
5.000 UL
LT0
1803 420 M
109 0 V
1803 420 Pnt
1912 420 Pnt
0.000 UP
5.000 UL
LT0
1912 1982 M
109 0 V
1912 1982 Pnt
2021 1982 Pnt
0.000 UP
5.000 UL
LT0
2021 420 M
109 0 V
2021 420 Pnt
2130 420 Pnt
0.000 UP
5.000 UL
LT0
2130 1982 M
109 0 V
2130 1982 Pnt
2239 1982 Pnt
0.000 UP
5.000 UL
LT0
2239 420 M
109 0 V
2239 420 Pnt
2348 420 Pnt
0.000 UP
5.000 UL
LT0
2348 1982 M
109 0 V
2348 1982 Pnt
2457 1982 Pnt
0.000 UP
5.000 UL
LT0
2457 420 M
109 0 V
2457 420 Pnt
2566 420 Pnt
0.000 UP
5.000 UL
LT0
2566 1982 M
109 0 V
2566 1982 Pnt
2675 1982 Pnt
0.000 UP
5.000 UL
LT0
2675 420 M
110 0 V
2675 420 Pnt
2785 420 Pnt
0.000 UP
5.000 UL
LT0
2785 1982 M
108 0 V
2785 1982 Pnt
2893 1982 Pnt
0.000 UP
5.000 UL
LT0
2893 420 M
110 0 V
2893 420 Pnt
3003 420 Pnt
0.000 UP
5.000 UL
LT0
3003 1982 M
109 0 V
3003 1982 Pnt
3112 1982 Pnt
0.000 UP
5.000 UL
LT0
3112 420 M
109 0 V
3112 420 Pnt
3221 420 Pnt
0.000 UP
5.000 UL
LT0
3221 1982 M
109 0 V
3221 1982 Pnt
3330 1982 Pnt
0.000 UP
5.000 UL
LT0
3330 420 M
109 0 V
3330 420 Pnt
3439 420 Pnt
0.000 UP
5.000 UL
LT0
3439 1982 M
109 0 V
3439 1982 Pnt
3548 1982 Pnt
0.000 UP
5.000 UL
LT0
3548 420 M
109 0 V
3548 420 Pnt
3657 420 Pnt
0.000 UP
5.000 UL
LT0
3657 1982 M
109 0 V
3657 1982 Pnt
3766 1982 Pnt
0.000 UP
5.000 UL
LT0
3766 420 M
109 0 V
3766 420 Pnt
3875 420 Pnt
0.000 UP
5.000 UL
LT0
3875 1982 M
109 0 V
3875 1982 Pnt
3984 1982 Pnt
0.000 UP
5.000 UL
LT0
3984 420 M
109 0 V
3984 420 Pnt
4093 420 Pnt
0.000 UP
5.000 UL
LT0
4093 1982 M
109 0 V
4093 1982 Pnt
4202 1982 Pnt
0.000 UP
5.000 UL
LT0
4202 420 M
109 0 V
4202 420 Pnt
4311 420 Pnt
0.000 UP
5.000 UL
LT0
4311 1982 M
109 0 V
4311 1982 Pnt
4420 1982 Pnt
0.000 UP
5.000 UL
LT0
4420 420 M
109 0 V
4420 420 Pnt
4529 420 Pnt
0.000 UP
5.000 UL
LT0
4529 1982 M
109 0 V
4529 1982 Pnt
4638 1982 Pnt
0.000 UP
5.000 UL
LT0
4638 420 M
109 0 V
4638 420 Pnt
4747 420 Pnt
0.000 UP
5.000 UL
LT0
4747 1982 M
109 0 V
4747 1982 Pnt
4856 1982 Pnt
0.000 UP
5.000 UL
LT0
4856 420 M
109 0 V
4856 420 Pnt
4965 420 Pnt
0.000 UP
5.000 UL
LT0
4965 1982 M
109 0 V
4965 1982 Pnt
5074 1982 Pnt
0.000 UP
5.000 UL
LT0
5074 420 M
109 0 V
5074 420 Pnt
5183 420 Pnt
0.000 UP
5.000 UL
LT0
5183 1982 M
109 0 V
5183 1982 Pnt
5292 1982 Pnt
0.000 UP
5.000 UL
LT0
5292 420 M
109 0 V
5292 420 Pnt
5401 420 Pnt
0.000 UP
5.000 UL
LT0
5401 1982 M
109 0 V
5401 1982 Pnt
5510 1982 Pnt
0.000 UP
5.000 UL
LT0
5510 420 M
109 0 V
5510 420 Pnt
5619 420 Pnt
0.000 UP
5.000 UL
LT0
5619 1982 M
109 0 V
5619 1982 Pnt
5728 1982 Pnt
0.000 UP
5.000 UL
LT0
5728 420 M
109 0 V
5728 420 Pnt
5837 420 Pnt
0.000 UP
5.000 UL
LT0
5837 1982 M
109 0 V
5837 1982 Pnt
5946 1982 Pnt
0.000 UP
5.000 UL
LT0
5946 420 M
109 0 V
5946 420 Pnt
6055 420 Pnt
0.000 UP
5.000 UL
LT0
6055 1982 M
109 0 V
6055 1982 Pnt
6164 1982 Pnt
0.000 UP
5.000 UL
LT0
6164 420 M
109 0 V
6164 420 Pnt
6273 420 Pnt
0.000 UP
5.000 UL
LT0
6273 1982 M
109 0 V
6273 1982 Pnt
6382 1982 Pnt
0.000 UP
5.000 UL
LT0
6382 420 M
109 0 V
6382 420 Pnt
6491 420 Pnt
0.000 UP
5.000 UL
LT0
6491 1982 M
109 0 V
6491 1982 Pnt
6600 1982 Pnt
0.000 UP
5.000 UL
LT0
6600 420 M
109 0 V
6600 420 Pnt
6709 420 Pnt
0.000 UP
5.000 UL
LT0
6709 1982 M
109 0 V
6709 1982 Pnt
6818 1982 Pnt
0.000 UP
5.000 UL
LT0
6818 420 M
109 0 V
6818 420 Pnt
6927 420 Pnt
0.000 UP
5.000 UL
LT0
6927 1982 M
35 0 V
6927 1982 Pnt
6962 1982 Pnt
1.000 UL
LTb
714 420 M
6248 0 V
0 3124 V
-6248 0 V
714 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
